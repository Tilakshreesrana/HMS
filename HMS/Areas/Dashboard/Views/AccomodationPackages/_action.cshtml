@model HMS.Areas.Dashboard.ViewModels.AccomodationPackageActionViewModel

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title">
            @if (Model.ID > 0)
            {
                <span>
                    Edit Accomodation Package
                </span>

            }
            else
            {
                <span>Create Accomodation Package</span>
            }
        </h5>

        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <form id="actionForm">
            <input type="hidden" name="ID" value="@Model.ID" />
            <div class="form-group">
                <label>AccomodationType</label>
                <select class="form-control" name="AccomodationTypeID">
                    @if (Model.AccomodationTypes != null)
                    {
                        foreach (var item in Model.AccomodationTypes)
                        {
                            <option value="@item.ID" @(item.ID == Model.AccomodationTypeID ? "selected" : string.Empty)>
                                @item.Name
                            </option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label>Name</label>
                <input class="form-control" name="Name" placeholder="Enter Accomodation Package" value="@Model.Name">
            </div>
            <div class="form-group">
                <label>No Of Rooms</label>
                <input class="form-control" name="NoOfRooms" placeholder="Enter Number of Room" value="@Model.NoOfRooms">
            </div>
            <div class="form-group">
                <label>Fee Per Night</label>
                <input class="form-control" name="FeePerNight" placeholder="Enter Fee Per Night" value="@Model.FeePerNight">
            </div>
            <div class="form-group">
                <label>Description</label>
                <textarea class="form-control" name="Description" placeholder="Enter Description">
                  @Model.Description
               </textarea>
            </div>
            <div class="form-group">
                <label>Upload Picture</label>
                <input id="selectPictures" class="form-control" name="Images" type="file" multiple>
                <input type="hidden" name="ImageIDs" id="ImageIDs" value="" />
            </div>
            <div id="imagesArea">
                @if (Model.acoomodationPackageImages != null && Model.acoomodationPackageImages.Count > 0)
                {
                    foreach (var accomodationImage in Model.acoomodationPackageImages)
                    {
                        <img src="/images/Upload/@accomodationImage.Image.ImageUrl" class="img-fluid" style="width:200px;height:200px" onclick="removeMe(this)" data-id="@accomodationImage.ImageID" />

                    }
                }

            </div>

        </form>
        <div class="errorDiv">

        </div>
    </div>
    <div class="modal-footer">
        <button id="actionBtn" type="button" class="btn btn-primary"><i class="fas fa-save mr-1"></i>Save changes</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-window-close mr-1"></i>Close</button>

    </div>
</div>
<div id="imagetemplate">
    <img src="" class="img-fluid" style="width:200px;" onclick="removeMe(this)"/>
</div>
<script>
    $("#actionBtn").click(function () {
        debugger;
        var imgIDs = [];
        $("#imagesArea img").each(function () {
            var imgId = $(this).attr("data-id");
            imgIDs.push(imgId);
        })
        $("#ImageIDs").val(imgIDs.join());
         $.ajax({
             url: '@Url.Action("Action", "AccomodationPackages")',
             type: "post",
             data: $("#actionForm").serialize()
        })
            .done(function (response) {
                if (response) {
                    location.reload();
                }
                else {
                    $(".errorDiv").html(response.Message);
                }
            })

    })
    $("#selectPictures").change(function () {
        var images = this.files;
        var formData = new FormData();
        for (var i = 0; i < images.length; i++) {
            formData.append("Images",images[i])
        }
         $.ajax({
             url: '@Url.Action("ImageUpload", "Upload")',
             type: "POST",
             data: formData,
             processData: false,
             contentType: false
        })
             .done(function (response) {
                 for (var i = 0; i < response.length; i++) {
                     var pic = response[i];
                     var $imgHtml = $("#imagetemplate").clone();
                     $imgHtml.find("img").attr("src", "/images/Upload/" + pic.ImageUrl);
                     $imgHtml.find("img").attr("data-id", pic.ID);
                     $("#imagesArea").append($imgHtml.html());
                 }
            })
       
         
    })
    function removeMe(element) {
        element.remove();
    }
</script>

